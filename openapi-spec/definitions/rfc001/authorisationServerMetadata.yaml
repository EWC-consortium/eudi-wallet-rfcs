title: Authorisation Server Metadata
type: object
description: "As described in Chapter 3 of [OpenID Connect Discovery 1.0 specification](https://openid.net/specs/openid-connect-discovery-1_0.html)."
properties:
  issuer:
    type: string
    description: REQUIRED. URL using the https scheme with no query or fragment components that the OP asserts as its Issuer Identifier.
  authorization_endpoint:
    type: string
    description: REQUIRED. URL of the OP's OAuth 2.0 Authorization Endpoint [OpenID.Core]. This URL MUST use the https scheme and MAY contain port, path, and query parameter components.
  pushed_authorization_request_endpoint:
    type: string
    description: The URL of the pushed authorization request endpoint at which a client can post an authorization request to exchange for a request_uri value usable at the authorization server.
  require_pushed_authorization_requests:
    type: boolean
    description: Boolean parameter indicating whether the authorization server accepts authorization request data only via PAR. If omitted, the default value is false.
  token_endpoint:
    type: string
    description: URL of the OP's OAuth 2.0 Token Endpoint [OpenID.Core]. This URL MUST use the https scheme and MAY contain port, path, and query parameter components.
  jwks_uri:
    type: string
    description: REQUIRED. URL of the OP's JWK Set [JWK] document, which MUST use the https scheme. This contains the signing key(s) the RP uses to validate signatures from the OP. The JWK Set MAY also contain the Server's encryption key(s), which are used by RPs to encrypt requests to the Server. When both signing and encryption keys are made available, a use (public key use) parameter value is REQUIRED for all keys in the referenced JWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both signatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used to provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST match those in the certificate. The JWK Set MUST NOT contain private or symmetric key values.
  response_types_supported:
    type: array
    items:
      type: string
    description: REQUIRED. JSON array containing a list of the OAuth 2.0 response_type values that this OP supports.
  subject_types_supported:
    type: array
    items:
      type: string
    description: REQUIRED. JSON array containing a list of the Subject Identifier types that this OP supports. Valid types include pairwise and public.
  id_token_signing_alg_values_supported:
    type: array
    items:
      type: string
    description: REQUIRED. JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT [JWT]. The algorithm RS256 MUST be included. The value none MAY be supported but MUST NOT be used unless the Response Type used returns no ID Token from the Authorization Endpoint (such as when using the Authorization Code Flow).
required:
  - issuer
  - authorization_endpoint
  - token_endpoint
  - jwks_uri
  - response_types_supported
  - subject_types_supported
  - id_token_signing_alg_values_supported
